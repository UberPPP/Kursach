//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
#include "Unit4.h"
#include <fstream>
#include <iostream>
using namespace std;
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
AnsiString filename;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button1Click(TObject *Sender)
{
	if (OpenDialog1->Execute()){
		filename = OpenDialog1 ->FileName;
		Memo1->Lines->LoadFromFile(filename);

	}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button2Click(TObject *Sender)
{
	Memo2->Lines->SaveToFile(SaveDialog1->FileName);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button4Click(TObject *Sender)
{
 Form4->Show();
}
//---------------------------------------------------------------------------

void __fastcall TForm2::Button3Click(TObject *Sender)
{
	int side = StrToInt(Edit1->Text);
	char word[255];
	char symbol; // определить этот символ
    int count = 0;
	while( !fin.eof() ){
		fin >> word;
		if( word[0] == symbol ){
			cout << word << endl;
			count++;
		}
	}
	Edit1->Text = count;
   /*	if (count%side!=0) {
		count= count +(side-count%side);
	}
	char **mass = new char *[count/side];
	for (int i=0; i < count/side; i++) {
		mass[i] = new char [side];
		}        */



}
//---------------------------------------------------------------------------

